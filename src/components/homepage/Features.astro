---
// Features grid with 3D hover effects
---

<section id="features" class="py-20 bg-slate-900 relative">
  <div class="container mx-auto px-4">
    <div class="text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold text-white mb-4">
        Why Choose ReliabilityOps
      </h2>
      <p class="text-xl text-slate-300 max-w-2xl mx-auto">
        Battle-tested strategies that prevent outages and save millions
      </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
      <!-- Feature 1: Predictive Intelligence -->
      <div class="feature-card" data-tilt>
        <div class="feature-icon">
          <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
          </svg>
        </div>
        <h3 class="text-xl font-semibold text-white mb-3">Predictive Intelligence</h3>
        <p class="text-slate-300 mb-4">
          AI-powered systems that identify and resolve issues 30+ minutes before they impact users
        </p>
        <span class="learn-more">
          Learn more →
        </span>
      </div>

      <!-- Feature 2: Military Precision -->
      <div class="feature-card" data-tilt>
        <div class="feature-icon">
          <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
          </svg>
        </div>
        <h3 class="text-xl font-semibold text-white mb-3">Military Precision</h3>
        <p class="text-slate-300 mb-4">
          15+ years of operational excellence from military service applied to your infrastructure
        </p>
        <span class="learn-more">
          Learn more →
        </span>
      </div>

      <!-- Feature 3: Proven ROI -->
      <div class="feature-card" data-tilt>
        <div class="feature-icon">
          <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <h3 class="text-xl font-semibold text-white mb-3">Proven ROI</h3>
        <p class="text-slate-300 mb-4">
          $2.8M+ saved through prevented outages with average 3x ROI within 6 months
        </p>
        <span class="learn-more">
          Learn more →
        </span>
      </div>

      <!-- Feature 4: 24/7 Monitoring -->
      <div class="feature-card" data-tilt>
        <div class="feature-icon">
          <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <h3 class="text-xl font-semibold text-white mb-3">Always-On Monitoring</h3>
        <p class="text-slate-300 mb-4">
          Round-the-clock intelligent monitoring that never sleeps, so you can
        </p>
        <span class="learn-more">
          Learn more →
        </span>
      </div>

      <!-- Feature 5: Rapid Response -->
      <div class="feature-card" data-tilt>
        <div class="feature-icon">
          <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
          </svg>
        </div>
        <h3 class="text-xl font-semibold text-white mb-3">Rapid Response</h3>
        <p class="text-slate-300 mb-4">
          67% faster incident resolution through automated playbooks and AI-assisted debugging
        </p>
        <span class="learn-more">
          Learn more →
        </span>
      </div>

      <!-- Feature 6: Enterprise Scale -->
      <div class="feature-card" data-tilt>
        <div class="feature-icon">
          <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
          </svg>
        </div>
        <h3 class="text-xl font-semibold text-white mb-3">Enterprise Scale</h3>
        <p class="text-slate-300 mb-4">
          Proven at scale with systems handling millions of requests per second
        </p>
        <span class="learn-more">
          Learn more →
        </span>
      </div>
    </div>
  </div>
</section>

<style>
  .feature-card {
    @apply bg-slate-800/50 backdrop-blur-sm border border-slate-700/50 rounded-xl p-6;
    @apply transition-all duration-300 cursor-pointer;
    @apply hover:border-emerald-500/50 hover:shadow-xl hover:shadow-emerald-500/10;
    position: relative;
    transform-style: preserve-3d;
    transform: perspective(1000px);
  }

  .feature-card::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, transparent 40%, rgba(16, 185, 129, 0.1) 100%);
    border-radius: 0.75rem;
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  .feature-card:hover::before {
    opacity: 1;
  }

  .feature-icon {
    @apply w-14 h-14 bg-emerald-500/20 rounded-lg mb-4;
    @apply flex items-center justify-center;
    @apply text-emerald-400;
    @apply transition-all duration-300;
  }

  .feature-card:hover .feature-icon {
    @apply bg-emerald-500/30 text-emerald-300;
    @apply transform scale-110;
  }

  .learn-more {
    @apply text-emerald-400 text-sm font-medium;
    @apply opacity-0 transform translate-y-2;
    @apply transition-all duration-300;
    @apply inline-block;
  }

  .feature-card:hover .learn-more {
    @apply opacity-100 transform translate-y-0;
  }

  /* 3D tilt effect */
  .feature-card[data-tilt] {
    will-change: transform;
  }

  /* Staggered fade-in animation */
  .feature-card {
    opacity: 0;
    transform: translateY(30px);
  }

  .feature-card.in-view {
    animation: fadeInUp 0.6s ease-out forwards;
  }

  .feature-card:nth-child(1).in-view { animation-delay: 0s; }
  .feature-card:nth-child(2).in-view { animation-delay: 0.1s; }
  .feature-card:nth-child(3).in-view { animation-delay: 0.2s; }
  .feature-card:nth-child(4).in-view { animation-delay: 0.3s; }
  .feature-card:nth-child(5).in-view { animation-delay: 0.4s; }
  .feature-card:nth-child(6).in-view { animation-delay: 0.5s; }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  // 3D tilt effect on mouse move
  const cards = document.querySelectorAll('[data-tilt]');
  
  cards.forEach(card => {
    card.addEventListener('mousemove', (e) => {
      const rect = card.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      
      const centerX = rect.width / 2;
      const centerY = rect.height / 2;
      
      const rotateX = (y - centerY) / 10;
      const rotateY = (centerX - x) / 10;
      
      card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateZ(10px)`;
    });
    
    card.addEventListener('mouseleave', () => {
      card.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) translateZ(0)';
    });
  });

  // Intersection Observer for fade-in animation
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('in-view');
      }
    });
  }, { threshold: 0.1 });

  cards.forEach(card => observer.observe(card));
</script>