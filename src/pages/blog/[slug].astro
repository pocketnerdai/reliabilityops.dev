---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import { client } from '../../sanity/lib/client';
import { postBySlugQuery } from '../../sanity/lib/queries';
import { urlForImage } from '../../sanity/lib/image';

const { slug } = Astro.params;
const post = await client.fetch(postBySlugQuery, { slug });

if (!post) {
  return Astro.redirect('/404');
}

// Cache settings
Astro.response.headers.set('Cache-Control', 'public, max-age=3600, stale-while-revalidate=300');

// Simple function to render Portable Text
function renderContent(blocks) {
  if (!blocks || !Array.isArray(blocks)) return '';
  
  let html = '';
  
  blocks.forEach(block => {
    if (block._type === 'block' && block.children) {
      let text = '';
      block.children.forEach(child => {
        if (child.text) {
          let segment = child.text;
          
          // Handle links
          if (child.marks && block.markDefs) {
            child.marks.forEach(mark => {
              const markDef = block.markDefs.find(def => def._key === mark);
              if (markDef && markDef._type === 'link') {
                segment = `<a href="${markDef.href}" class="text-emerald-400 hover:text-emerald-300 underline">${segment}</a>`;
              }
            });
          }
          
          text += segment;
        }
      });
      
      // Split by double newlines for paragraphs
      const paragraphs = text.split('\n\n');
      paragraphs.forEach(para => {
        if (para.trim()) {
          const formatted = para.replace(/\n/g, '<br>');
          html += `<p class="mb-4">${formatted}</p>`;
        }
      });
    }
  });
  
  return html;
}

const bodyHtml = renderContent(post.body);
const heroImageUrl = post.heroImage ? urlForImage(post.heroImage).width(1200).height(600).url() : null;
---

<html lang="en">
  <head>
    <BaseHead title={post.title} description={post.excerpt} />
    <style>
      html {
        scroll-behavior: smooth;
      }
    </style>
  </head>

  <body>
    <Header />
    <main class="min-h-screen bg-slate-900 pt-20">
      <article>
        <!-- Hero Image -->
        {heroImageUrl && (
          <div class="w-full max-w-6xl mx-auto px-4 mb-8">
            <img 
              src={heroImageUrl}
              alt={post.title}
              class="w-full h-auto rounded-xl shadow-2xl"
            />
          </div>
        )}
        
        <!-- Article Content -->
        <div class="container mx-auto px-4 py-8 max-w-4xl">
          <!-- Title Section -->
          <div class="text-center mb-8">
            <div class="text-slate-400 mb-4">
              <FormattedDate date={new Date(post.publishedAt)} />
            </div>
            <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">{post.title}</h1>
            <p class="text-xl text-slate-300">{post.excerpt}</p>
          </div>
          
          <hr class="border-slate-700 mb-8" />
          
          <!-- Article Body -->
          <div class="prose prose-lg prose-invert prose-slate max-w-none
            prose-headings:text-white 
            prose-h2:text-3xl prose-h2:font-bold prose-h2:mt-8 prose-h2:mb-4
            prose-h3:text-2xl prose-h3:font-semibold prose-h3:mt-6 prose-h3:mb-3
            prose-p:text-slate-300 prose-p:mb-4 prose-p:leading-relaxed
            prose-a:text-emerald-400 prose-a:no-underline hover:prose-a:text-emerald-300
            prose-strong:text-white prose-strong:font-semibold
            prose-code:text-emerald-400 prose-code:bg-slate-800 prose-code:px-1.5 prose-code:py-0.5 prose-code:rounded
            prose-pre:bg-slate-800 prose-pre:border prose-pre:border-slate-700
            prose-blockquote:border-l-4 prose-blockquote:border-emerald-500 prose-blockquote:pl-4 prose-blockquote:italic
            prose-ul:text-slate-300 prose-li:text-slate-300
            prose-img:rounded-lg prose-img:shadow-xl">
            <div set:html={bodyHtml} />
          </div>
          
          <!-- Navigation -->
          <div class="mt-16 pt-8 border-t border-slate-700">
            <a href="/blog" class="text-emerald-400 hover:text-emerald-300 transition-colors flex items-center gap-2">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
              </svg>
              Back to Blog
            </a>
          </div>
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>